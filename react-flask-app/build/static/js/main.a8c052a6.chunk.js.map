{"version":3,"sources":["Component/Credentials.js","Component/Store/flux.js","Component/Store/appContext.js","Component/Login.js","Component/AddFriend.js","Component/LoginHeader.js","Component/LoginHeaderWrapper.js","Component/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["Credentials","notEntered","setnotEntered","useState","name","setName","email","setEmail","password","setPassword","remember","setRemember","showPassword","setShowPassword","toggleFnc","e","preventDefault","className","onSubmit","console","log","credentials","fetch","process","method","headers","body","JSON","stringify","then","response","json","data","type","placeholder","value","onChange","target","onClick","style","background","checked","currentTarget","getState","getStore","getActions","setStore","store","token","message","demo","title","initial","actions","exampleFunction","changeColor","syncTokenFromSessionStore","sessionStorage","getItem","undefined","logout","removeItem","login","a","opts","status","alert","setItem","access_token","error","getGraph","setNodes","setLinks","nodes","links","user","getMessage","BACKEND_URL","resp","catch","index","color","map","elm","i","Context","React","createContext","injectContext","PassedComponent","props","state","updatedStore","setState","Object","assign","useEffect","Provider","Login","signIn","setSignIn","useContext","history","useHistory","push","to","src","crossorigin","AddFriend","onAdd","friendName1","setFriendName1","friendName2","setFriendName2","friendName3","setFriendName3","friendName4","setFriendName4","friends","addFriend","friend","LoginHeader","signIned","setSignIned","cursor","LoginHeaderWrapper","MainPage","nodes_","links_","recieved","setRecieved","textAlign","graphData","nodeId","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAiFeA,EA5EK,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cAC9B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,oBAAS,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAeMC,EAAY,SAACC,GACfA,EAAEC,iBACFH,GAAiBD,IAErB,OACI,qBAAKK,UAAU,iBAAf,SACI,uBAAMC,SAnBG,SAACH,GACdA,EAAEC,iBACFG,QAAQC,IAAIhB,EAAKE,EAAME,EAASE,GAChC,IAAMW,EAAc,CAACjB,OAAME,QAAME,YACjCc,MAAM,GAAD,OAAIC,wBAAJ,WAAwC,CACzCC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUP,KACtBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAI,OAAIb,QAAQC,IAAIY,MAE9D9B,GAAeD,IASX,UACI,qBAAKgB,UAAU,eAAf,SACI,uBACIgB,KAAK,OACLC,YAAY,OACZC,MAAO/B,EACPgC,SAAU,SAACrB,GAAD,OAAOV,EAAQU,EAAEsB,OAAOF,YAG1C,qBAAKlB,UAAU,eAAf,SACI,uBACIgB,KAAK,OACLC,YAAY,QACZC,MAAO7B,EACP8B,SAAU,SAACrB,GAAD,OAAOR,EAASQ,EAAEsB,OAAOF,YAG3C,sBAAKlB,UAAU,eAAf,UACI,uBACIgB,KAAMrB,EAAe,OAAS,WAC9BsB,YAAY,WACZC,MAAO3B,EACP4B,SAAU,SAACrB,GAAD,OAAON,EAAYM,EAAEsB,OAAOF,UAEzCvB,EACD,wBAASK,UAAU,oBAAoBqB,QAASxB,EAChDyB,MAAO,CAACC,WAAY,8EAEnB,wBAASvB,UAAU,oBAAoBqB,QAASxB,EACjDyB,MAAO,CAACC,WAAY,kFAKxB,sBAAKvB,UAAU,qBAAf,UAEI,uBACIgB,KAAK,WACLQ,QAAW/B,EACXyB,MAAOzB,EACP0B,SAAU,SAACrB,GAAD,OAAOJ,EAAYI,EAAE2B,cAAcD,YAC/C,mDAEN,uBAAOR,KAAK,SAASE,MAAM,UAAUlB,UAAU,wB,iCCgDhD0B,EA1HE,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACzC,MAAO,CACNC,MAAO,CACNC,MAAO,KACPC,QAAS,KACTC,KAAM,CACL,CACCC,MAAO,QACPX,WAAY,QACZY,QAAS,SAEV,CACCD,MAAO,SACPX,WAAY,QACZY,QAAS,WAIZC,QAAS,CAERC,gBAAiB,WAChBT,IAAaU,YAAY,EAAG,UAG7BC,0BAA2B,WAC1B,IAAMR,EAAQS,eAAeC,QAAQ,SACrCvC,QAAQC,IAAI,iDACR4B,GAAkB,IAATA,QAAwBW,GAATX,GAAoBF,EAAS,CAACE,MAAOA,KAGlEY,OAAQ,WACPH,eAAeI,WAAW,SAC1B1C,QAAQC,IAAI,WACZ0B,EAAS,CAACE,MAAO,QAITc,MAAM,WAAD,4BAAG,WAAOxD,EAAOE,GAAd,mBAAAuD,EAAA,6DACEC,EAAO,CACTxC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBtB,MAAOA,EACPE,SAAUA,KATd,kBAcuBc,MAAM,GAAD,OAAIC,wBAAJ,WAAyCyC,GAdrE,UAgBsB,OAFhBlC,EAdN,QAgBamC,OAhBb,uBAiBIC,MAAM,+BAjBV,mBAkBW,GAlBX,wBAqBmBpC,EAASC,OArB5B,eAqBMC,EArBN,OAsBAb,QAAQC,IAAI,6BAA8BY,GAC1CyB,eAAeU,QAAQ,QAASnC,EAAKoC,cACpDtB,EAAS,CAACE,MAAOhB,EAAKoC,eAxBP,mBAyBO,GAzBP,kCA4BAjD,QAAQkD,MAAM,kBA5Bd,0DAAH,qDAAC,GAkCfC,SAAS,WAAD,4BAAE,WAAOC,EAAUlE,EAASmE,GAA1B,qBAAAT,EAAA,6DACHhB,EAAQH,IACRoB,EAAO,CACZvC,QAAS,CACR,cAAiB,UAAYsB,EAAMC,QAJ5B,kBAQe1B,MAAM,GAAD,OAAIC,wBAAJ,qBAAmDyC,GARvE,UASc,OADhBlC,EARE,QASKmC,OATL,uBAUPC,MAAM,yCAVC,mBAWA,GAXA,wBAaWpC,EAASC,OAbpB,eAaFC,EAbE,OAcRb,QAAQC,IAAI,2BAA4BY,GACxCuC,EAASvC,EAAKyC,OACdD,EAASxC,EAAK0C,OACdrE,EAAQ2B,EAAK2C,MAjBL,mBAkBD,GAlBC,kCAqBRxD,QAAQkD,MAAM,mBArBN,0DAAF,uDAAC,GAyBTO,WAAY,WAEXtD,MAAMC,0KAAYsD,YAAc,cAC9BhD,MAAK,SAAAiD,GAAI,OAAIA,EAAK/C,UAClBF,MAAK,SAAAG,GAAI,OAAIc,EAAS,CAAEG,QAASjB,EAAKiB,aACtC8B,OAAM,SAAAV,GAAK,OAAIlD,QAAQC,IAAI,qCAAsCiD,OAGpEd,YAAa,SAACyB,EAAOC,GAEpB,IAIM/B,EAJQN,IAIKM,KAAKgC,KAAI,SAACC,EAAKC,GAEjC,OADIA,IAAMJ,IAAOG,EAAI3C,WAAayC,GAC3BE,KAIRrC,EAAS,CAAEI,KAAMA,QChHRmC,EAAUC,IAAMC,cAAc,MAyC5BC,EArCO,SAAAC,GAkCrB,OAjCqB,SAAAC,GAEpB,MAA0BvF,mBACzBwC,EAAS,CACRC,SAAU,kBAAM+C,EAAM5C,OACtBF,WAAY,kBAAM8C,EAAMtC,SACxBP,SAAU,SAAA8C,GAAY,OACrBC,EAAS,CACR9C,MAAO+C,OAAOC,OAAOJ,EAAM5C,MAAO6C,GAClCvC,QAAQ,eAAMsC,EAAMtC,eAPxB,mBAAOsC,EAAP,KAAcE,EAAd,KAyBA,OAbAG,qBAAU,WAOTL,EAAMtC,QAAQG,8BACZ,IAMF,cAAC6B,EAAQY,SAAT,CAAkB9D,MAAOwD,EAAzB,SACC,cAACF,EAAD,eAAqBC,QCoDVQ,EAjFD,SAAC,GAAuB,EAAtBC,OAAuB,IAAhBC,EAAe,EAAfA,UACnB,EAAyBC,qBAAWhB,GAA7BtC,EAAP,EAAOA,MAAOM,EAAd,EAAcA,QACd,EAA0BlD,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,oBAAS,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAEMyF,GADQ7C,eAAc,MACZ8C,eASVzF,EAAY,SAACC,GACfA,EAAEC,iBACFH,GAAiBD,IAKrB,OAFImC,EAAMC,OAAwB,IAAfD,EAAMC,YAA8BW,GAAfZ,EAAMC,OAAoBsD,EAAQE,KAAK,aAG3E,8BACMzD,EAAMC,OAAwB,IAAfD,EAAMC,YAA8BW,GAAfZ,EAAMC,MAAsB,cAAC,IAAD,CAAUyD,GAAG,cAC3E,sBAAKxF,UAAU,gBAAf,UACI,wBAAQyF,IAAI,4CAA4CC,YAAY,cAEpE,wCACA,qBAAK1F,UAAU,iBAAf,SAEI,uBAAMC,SAvBT,SAACH,GACdA,EAAEC,iBACFqC,EAAQS,MAAMxD,EAAME,GAAUqB,MAAK,WAC/BuE,GAAU,OAoBE,UACI,qBAAKnF,UAAU,eAAf,SACI,uBACIgB,KAAK,OACLC,YAAY,QACZC,MAAO7B,EACP8B,SAAU,SAACrB,GAAD,OAAOR,EAASQ,EAAEsB,OAAOF,YAI3C,sBAAKlB,UAAU,eAAf,UAEI,uBACIgB,KAAMrB,EAAe,OAAS,WAC9BsB,YAAY,WACZC,MAAO3B,EACP4B,SAAU,SAACrB,GAAD,OAAON,EAAYM,EAAEsB,OAAOF,UAGzCvB,EACD,wBAASK,UAAU,oBAAoBqB,QAASxB,EAChDyB,MAAO,CAACC,WAAY,8EAEnB,wBAASvB,UAAU,oBAAoBqB,QAASxB,EACjDyB,MAAO,CAACC,WAAY,kFAMxB,sBAAKvB,UAAU,qBAAf,UAEI,uBACIgB,KAAK,WACLQ,QAAW/B,EACXyB,MAAOzB,EACP0B,SAAU,SAACrB,GAAD,OAAOJ,EAAYI,EAAE2B,cAAcD,YAC/C,mDAGN,uBAAOR,KAAK,SAASE,MAAM,UAAUlB,UAAU,6BChB5D2F,EA5DG,SAAC,GAAuB,EAAtBC,MAAuB,IAAhBT,EAAe,EAAfA,UACtB,EAAsCjG,mBAAS,IAA/C,mBAAO2G,EAAP,KAAoBC,EAApB,KACA,EAAsC5G,mBAAS,IAA/C,mBAAO6G,EAAP,KAAoBC,EAApB,KACA,EAAsC9G,mBAAS,IAA/C,mBAAO+G,EAAP,KAAoBC,EAApB,KACA,EAAsChH,mBAAS,IAA/C,mBAAOiH,EAAP,KAAoBC,EAApB,KAsBD,OACG,uBAAMpG,UAAU,uBAAuBC,SApBzB,SAACH,GACdA,EAAEC,iBAEF,IAAMsG,EAAU,CAACR,cAAaE,cAAaE,cAAaE,eACxDjG,QAAQC,IAAIkG,GAIZhG,MAAM,GAAD,OAAIC,wBAAJ,cAA2C,CAC5CC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU0F,KACtBzF,MAAK,SAAAC,GACJA,EAASC,OACTqE,GAAU,MACXvE,MAAK,SAAAG,GAAI,OAAIb,QAAQC,IAAIY,OAK7B,UACI,sBAAKf,UAAU,kBAAf,UACI,uCACC,uBAAOgB,KAAM,OAAOC,YAAY,aAChCC,MAAO2E,EACP1E,SAAW,SAACrB,GAAD,OAAKgG,EAAehG,EAAEsB,OAAOF,aAE5C,sBAAKlB,UAAU,kBAAf,UACG,uCACC,uBAAOgB,KAAM,OAAOC,YAAY,aAChCC,MAAO6E,EACP5E,SAAW,SAACrB,GAAD,OAAKkG,EAAelG,EAAEsB,OAAOF,aAE5C,sBAAKlB,UAAU,kBAAf,UACG,uCACC,uBAAOgB,KAAM,OAAOC,YAAY,aAChCC,MAAO+E,EACP9E,SAAW,SAACrB,GAAD,OAAKoG,EAAepG,EAAEsB,OAAOF,aAE5C,sBAAKlB,UAAU,kBAAf,UACG,uCACC,uBAAOgB,KAAM,OAAOC,YAAY,aAChCC,MAAOiF,EACPhF,SAAW,SAACrB,GAAD,OAAKsG,EAAetG,EAAEsB,OAAOF,aAG5C,uBAAOF,KAAK,SAASE,MAAM,WAAWlB,UAAU,sBCrDtDsG,EAAY,SAACC,GACfrG,QAAQC,IAAIoG,IAoCDC,EAjCK,SAAC,GAAwB,IAAvBtB,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,UACzB,EAAoCjG,oBAAS,GAA7C,mBAAOF,EAAP,KAAmBC,EAAnB,KACA,EAAgCC,oBAAS,GAAzC,mBAAOuH,EAAP,KAAiBC,EAAjB,KAOA,OACI,qBAAK1G,UAAU,kBAAf,SAEKhB,EAEIyH,EAEG,cAAC,EAAD,CAAOvB,OAAQA,EAAQC,UAAWA,IAEtC,sBAAKnF,UAAU,gBAAf,UACI,gDACA,2DAFJ,IAEuC,oBAAIA,UAAU,OAAOqB,QAhBxD,WACZqF,GAAY,IAe0EpF,MAAO,CAACqF,OAAQ,WAAvD,qBACnC,cAAC,EAAD,CAAa3H,WAAYA,EAAYC,cAAeA,OAGxD,gCACI,oBAAIe,UAAU,qBAAd,sEACA,cAAC,EAAD,CAAW4F,MAAOU,EAAWnB,UAAWA,UCnB7CyB,EAbY,SAAC,GAAyB,IAAxB1B,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAChC,OAAID,EACM,cAAC,IAAD,CAAUM,GAAG,cAGpB,8BACI,qBAAKxF,UAAU,WAAf,SACI,cAAC,EAAD,CAAakF,OAAQA,EAAQC,UAAWA,S,QCwCzC0B,EA3CE,SAAC,GAAyB,IAAxB1B,EAAuB,EAAvBA,UAAWD,EAAY,EAAZA,OAC1B,EAAyBE,qBAAWhB,GAA7BtC,EAAP,EAAOA,MAAOM,EAAd,EAAcA,QACd,EAA2BlD,mBAAS,IAApC,mBAAO4H,EAAP,KAAexD,EAAf,KACA,EAA0BpE,mBAAS,IAAnC,mBAAO6H,EAAP,KAAcxD,EAAd,KACA,EAAwBrE,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAO8H,EAAP,KAAiBC,EAAjB,KACA,EAA4B/H,oBAAS,GAArC,6BACgBoG,cAgBhB,OARAP,qBAAU,WACFG,GACA9C,EAAQiB,SAASC,EAAUlE,EAASmE,GAAU3C,MAAK,WAC/CqG,GAAY,QAGrB,IAGC,8BACMnF,EAAMC,MACLiF,EACC,gCACI,qBAAI1F,MAAO,CAAC4F,UAAW,UAAvB,UAAmC/H,EAAnC,sBACA,cAAC,IAAD,CAAcgI,UAAW,CAAC3D,MAAOsD,EAAQrD,MAAOsD,GAASK,OAAS,OAClE,wBAAQ/F,QArBH,WACjBe,EAAQO,SACRwC,GAAU,GACT,KAkBW,2BAGJ,8BACI,oBAAI7D,MAAO,CAAC4F,UAAW,UAAvB,0BATQ,cAAC,IAAD,CAAU1B,GAAI,S,QCL3BjB,SApBf,WACE,MAA4BrF,oBAAS,GAArC,mBAAOgG,EAAP,KAAeC,EAAf,KAEA,OACI,cAAC,IAAD,UACE,qBAAKnF,UAAY,YAAjB,SACE,qBAAKA,UAAY,kBAAjB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAO,cAAC,EAAD,CAAoBrC,OAAQA,EAAQC,UAAWA,OACvF,cAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,YAAYC,UAAW,kBAAO,cAAC,EAAD,CAAUpC,UAAWA,EAAWD,OAASA,mBCLxFsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9G,MAAK,YAAkD,IAA/C+G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAOP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.a8c052a6.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\nconst {REACT_APP_TEST} = process.env;\r\n\r\n\r\nconst Credentials = ({notEntered, setnotEntered}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n    const [showPassword, setShowPassword] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(name,email,password,remember)\r\n        const credentials = {name, email,password}\r\n        fetch(`${process.env.REACT_APP_TEST}/signup`,{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(credentials)\r\n        }).then(response => response.json()).then(data => console.log(data))\r\n    \r\n        setnotEntered(!notEntered)\r\n    }\r\n\r\n    const toggleFnc = (e) => {\r\n        e.preventDefault()\r\n        setShowPassword(!showPassword)\r\n    }\r\n    return (\r\n        <div className=\"cred-container\">\r\n            <form onSubmit={(onSubmit)}>\r\n                <div className='form-control'>\r\n                    <input \r\n                        type='text' \r\n                        placeholder='Name' \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <input \r\n                        type='text' \r\n                        placeholder='Email' \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <input \r\n                        type={showPassword ? \"text\" : \"password\"} \r\n                        placeholder='Password' \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    {showPassword?\r\n                    <button  className='show-password-btn' onClick={toggleFnc} \r\n                    style={{background: \"url('https://img.icons8.com/material-outlined/24/000000/closed-eye.png')\"}}\r\n                    ></button>\r\n                    :<button  className='show-password-btn' onClick={toggleFnc}\r\n                    style={{background: \"url('https://img.icons8.com/material-outlined/24/000000/visible--v2.png')\"}}\r\n                    ></button>\r\n                    }\r\n\r\n                </div>\r\n                <div className='form-control-check'>\r\n                    \r\n                    <input \r\n                        type='checkbox' \r\n                        checked = {remember}\r\n                        value={remember} \r\n                        onChange={(e) => setRemember(e.currentTarget.checked)}\r\n                    /><label>Remember me</label>\r\n                </div>\r\n                <input type='submit' value='Sign up' className='btn btn-block' />\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Credentials\r\n","const getState = ({ getStore, getActions, setStore }) => {\r\n\treturn {\r\n\t\tstore: {\r\n\t\t\ttoken: null,\r\n\t\t\tmessage: null,\r\n\t\t\tdemo: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"FIRST\",\r\n\t\t\t\t\tbackground: \"white\",\r\n\t\t\t\t\tinitial: \"white\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"SECOND\",\r\n\t\t\t\t\tbackground: \"white\",\r\n\t\t\t\t\tinitial: \"white\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tactions: {\r\n\t\t\t// Use getActions to call a function within a fuction\r\n\t\t\texampleFunction: () => {\r\n\t\t\t\tgetActions().changeColor(0, \"green\");\r\n\t\t\t},\r\n\r\n\t\t\tsyncTokenFromSessionStore: () => {\r\n\t\t\t\tconst token = sessionStorage.getItem(\"token\");\r\n\t\t\t\tconsole.log(\"App just loaded, syncing local sessionstorage\")\r\n\t\t\t\tif (token && token != \"\" && token != undefined) setStore({token: token});\r\n\t\t\t},\r\n\r\n\t\t\tlogout: () => {\r\n\t\t\t\tsessionStorage.removeItem(\"token\");\r\n\t\t\t\tconsole.log(\"Log out\");\r\n\t\t\t\tsetStore({token: null});\r\n\t\t\t},\r\n\r\n\r\n            login:  async (email, password) => {\r\n                const opts = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        \"Accept\": \"application/json\",\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: email,\r\n                        password: password\r\n                    })\r\n                };\r\n\r\n                try {\r\n                    const response = await fetch(`${process.env.REACT_APP_TEST}/signin`, opts)\r\n\r\n                    if (response.status!==200){ \r\n                        alert('Incorrect Email or Password');\r\n                        return false;\r\n                    }\r\n                    \r\n                    const data = await response.json();\r\n                    console.log(\"this came from the backend\", data);\r\n                    sessionStorage.setItem(\"token\", data.access_token);\r\n\t\t\t\t\tsetStore({token: data.access_token});\r\n                    return true;\r\n                }\r\n                catch (error){\r\n                    console.error(\"ERROR login in\")\r\n                }\r\n                \r\n                \r\n            },\r\n\r\n\t\t\tgetGraph: async (setNodes, setName, setLinks) => {\r\n\t\t\t\tconst store = getStore();\r\n\t\t\t\tconst opts = {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Authorization\": \"Bearer \" + store.token\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(`${process.env.REACT_APP_TEST}/mainpage/session`, opts)\r\n\t\t\t\t\tif (response.status!==200){ \r\n\t\t\t\t\t\talert('Error, no email found in the database');\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst data = await response.json();\r\n\t\t\t\t\tconsole.log(\"this came from the graph\", data);\r\n\t\t\t\t\tsetNodes(data.nodes);\r\n\t\t\t\t\tsetLinks(data.links);\r\n\t\t\t\t\tsetName(data.user);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error){\r\n\t\t\t\t\tconsole.error(\"ERROR get graph\")\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetMessage: () => {\r\n\t\t\t\t// fetching data from the backend\r\n\t\t\t\tfetch(process.env.BACKEND_URL + \"/api/hello\")\r\n\t\t\t\t\t.then(resp => resp.json())\r\n\t\t\t\t\t.then(data => setStore({ message: data.message }))\r\n\t\t\t\t\t.catch(error => console.log(\"Error loading message from backend\", error));\r\n\t\t\t},\r\n\r\n\t\t\tchangeColor: (index, color) => {\r\n\t\t\t\t//get the store\r\n\t\t\t\tconst store = getStore();\r\n\r\n\t\t\t\t//we have to loop the entire demo array to look for the respective index\r\n\t\t\t\t//and change its color\r\n\t\t\t\tconst demo = store.demo.map((elm, i) => {\r\n\t\t\t\t\tif (i === index) elm.background = color;\r\n\t\t\t\t\treturn elm;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//reset the global store\r\n\t\t\t\tsetStore({ demo: demo });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default getState;","import React, { useState, useEffect } from \"react\";\r\nimport getState from \"./flux.js\";\r\n\r\n// Don't change, here is where we initialize our context, by default it's just going to be null.\r\nexport const Context = React.createContext(null);\r\n\r\n// This function injects the global store to any view/component where you want to use it, we will inject the context to layout.js, you can see it here:\r\n// https://github.com/4GeeksAcademy/react-hello-webapp/blob/master/src/js/layout.js#L35\r\nconst injectContext = PassedComponent => {\r\n\tconst StoreWrapper = props => {\r\n\t\t//this will be passed as the contenxt value\r\n\t\tconst [state, setState] = useState(\r\n\t\t\tgetState({\r\n\t\t\t\tgetStore: () => state.store,\r\n\t\t\t\tgetActions: () => state.actions,\r\n\t\t\t\tsetStore: updatedStore =>\r\n\t\t\t\t\tsetState({\r\n\t\t\t\t\t\tstore: Object.assign(state.store, updatedStore),\r\n\t\t\t\t\t\tactions: { ...state.actions }\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t/**\r\n\t\t\t * EDIT THIS!\r\n\t\t\t * This function is the equivalent to \"window.onLoad\", it only runs once on the entire application lifetime\r\n\t\t\t * you should do your ajax requests or fetch api requests here. Do not use setState() to save data in the\r\n\t\t\t * store, instead use actions, like this:\r\n\t\t\t **/\r\n\t\t\tstate.actions.syncTokenFromSessionStore();\r\n\t\t}, []);\r\n\r\n\t\t// The initial value for the context is not null anymore, but the current state of this component,\r\n\t\t// the context will now have a getStore, getActions and setStore functions available, because they were declared\r\n\t\t// on the state of this component\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={state}>\r\n\t\t\t\t<PassedComponent {...props} />\r\n\t\t\t</Context.Provider>\r\n\t\t);\r\n\t};\r\n\treturn StoreWrapper;\r\n};\r\n\r\nexport default injectContext;","import { useState } from \"react\"\r\nimport { FaAcquisitionsIncorporated } from \"react-icons/fa\";\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Context } from \"./Store/appContext\";\r\n// import { FontAwesomeIcon } from '@fontawesome/react-fontawesome'\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from \"react-router\";\r\nimport { useContext } from \"react\";\r\n\r\nconst Login = ({signIn,setSignIn}) => {\r\n    const {store, actions} = useContext(Context)\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [remember, setRemember] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const token = sessionStorage[\"token\"];\r\n    const history = useHistory()\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        actions.login(email,password).then(()=>{\r\n            setSignIn(true)\r\n        })\r\n    };\r\n\r\n    const toggleFnc = (e) => {\r\n        e.preventDefault()\r\n        setShowPassword(!showPassword)\r\n    };\r\n\r\n    if (store.token && store.token != \"\" && store.token != undefined) history.push(\"/mainpage\");\r\n\r\n    return (\r\n        <div>\r\n            {(store.token && store.token != \"\" && store.token != undefined) ? <Redirect to=\"/mainpage\"/> :\r\n                <div className=\"signup-header\">\r\n                    <script src=\"https://kit.fontawesome.com/a076d05399.js\" crossorigin=\"anonymous\"></script>\r\n\r\n                    <h1>Log in</h1>\r\n                    <div className=\"cred-container\">\r\n                        \r\n                        <form onSubmit={(onSubmit)}>\r\n                            <div className='form-control'>\r\n                                <input \r\n                                    type='text' \r\n                                    placeholder='Email' \r\n                                    value={email} \r\n                                    onChange={(e) => setEmail(e.target.value)} \r\n                                />\r\n                            </div>\r\n\r\n                            <div className='form-control'>\r\n\r\n                                <input \r\n                                    type={showPassword ? \"text\" : \"password\"} \r\n                                    placeholder='Password' \r\n                                    value={password} \r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    \r\n                                />\r\n                                {showPassword?\r\n                                <button  className='show-password-btn' onClick={toggleFnc} \r\n                                style={{background: \"url('https://img.icons8.com/material-outlined/24/000000/closed-eye.png')\"}}\r\n                                ></button>\r\n                                :<button  className='show-password-btn' onClick={toggleFnc}\r\n                                style={{background: \"url('https://img.icons8.com/material-outlined/24/000000/visible--v2.png')\"}}\r\n                                ></button>\r\n                                }\r\n\r\n                            </div>\r\n\r\n                            <div className='form-control-check'>\r\n                                \r\n                                <input \r\n                                    type='checkbox' \r\n                                    checked = {remember}\r\n                                    value={remember} \r\n                                    onChange={(e) => setRemember(e.currentTarget.checked)}\r\n                                /><label>Remember me</label>\r\n\r\n                            </div>\r\n                            <input type='submit' value='Sign in' className='btn btn-block' />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { useState } from \"react\"\r\n\r\nconst {REACT_APP_TEST} = process.env;\r\n\r\n\r\nconst AddFriend = ({onAdd, setSignIn}) => {\r\n     const [friendName1, setFriendName1] = useState('')\r\n     const [friendName2, setFriendName2] = useState('')\r\n     const [friendName3, setFriendName3] = useState('')\r\n     const [friendName4, setFriendName4] = useState('')\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const friends = {friendName1, friendName2, friendName3, friendName4}\r\n        console.log(friends)\r\n\r\n\r\n        \r\n        fetch(`${process.env.REACT_APP_TEST}/addfriend`,{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(friends)\r\n        }).then(response => {\r\n            response.json()\r\n            setSignIn(true)\r\n        }).then(data => console.log(data))\r\n        //onAdd({friendName})\r\n        // setnotEntered(!notEntered)\r\n    }\r\n    return (\r\n       <form className='add-friend-container' onSubmit={onSubmit}>\r\n           <div className='add-friend-form'> \r\n               <label>1.</label>\r\n                <input type ='text' placeholder='Add Friend'\r\n                value={friendName1} \r\n                onChange ={(e)=>setFriendName1(e.target.value)}/>\r\n            </div>\r\n            <div className='add-friend-form'>\r\n               <label>2.</label>\r\n                <input type ='text' placeholder='Add Friend'\r\n                value={friendName2} \r\n                onChange ={(e)=>setFriendName2(e.target.value)}/>\r\n            </div>\r\n            <div className='add-friend-form'>\r\n               <label>3.</label>\r\n                <input type ='text' placeholder='Add Friend'\r\n                value={friendName3} \r\n                onChange ={(e)=>setFriendName3(e.target.value)}/>\r\n            </div>\r\n            <div className='add-friend-form'>\r\n               <label>4.</label>\r\n                <input type ='text' placeholder='Add Friend'\r\n                value={friendName4} \r\n                onChange ={(e)=>setFriendName4(e.target.value)}/>\r\n            </div>\r\n            \r\n            <input type='submit' value='Continue' className='btn btn-block' />\r\n\r\n       </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddFriend\r\n","import Credentials from \"./Credentials\"\r\nimport Login from \"./Login\"\r\nimport { useState } from \"react\"\r\nimport AddFriend from \"./AddFriend\"\r\n\r\nconst addFriend = (friend) =>{\r\n    console.log(friend)\r\n  }\r\n\r\nconst LoginHeader = ({signIn,setSignIn}) => {\r\n    const [notEntered, setnotEntered] = useState(true)\r\n    const [signIned, setSignIned] = useState(false)\r\n\r\n    const onClick = () => {\r\n        setSignIned(true)\r\n    }\r\n\r\n  \r\n    return (\r\n        <div className=\"login-container\">\r\n\r\n            {notEntered \r\n            ?\r\n                (signIned \r\n                ? \r\n                    <Login signIn={signIn} setSignIn={setSignIn}/>\r\n                : \r\n                <div className=\"signup-header\">\r\n                    <h1>Create account</h1>\r\n                    <h2>Already have an account? </h2> <h2 className=\"link\" onClick={onClick} style={{cursor: 'pointer'}}>Sign in</h2>\r\n                    <Credentials notEntered={notEntered} setnotEntered={setnotEntered}/>\r\n                </div>)\r\n                :\r\n                <div >\r\n                    <h1 className=\"add-friends-header\">Add a maximum of 4 people to your Covid-19 social bubble</h1>\r\n                    <AddFriend onAdd={addFriend} setSignIn={setSignIn}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginHeader\r\n","import { Redirect } from \"react-router-dom\"\r\nimport LoginHeader from \"./LoginHeader\"\r\n\r\nconst LoginHeaderWrapper = ({signIn, setSignIn}) => {\r\n     if (signIn){\r\n        return <Redirect to=\"/mainpage\" />;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"loginBox\">\r\n                <LoginHeader signIn={signIn} setSignIn={setSignIn}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginHeaderWrapper\r\n","import { useState, useEffect } from \"react\"\r\nimport { ForceGraph2D } from 'react-force-graph'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Context } from \"./Store/appContext\"\r\nimport { useContext } from \"react\"\r\nimport { Redirect, useHistory } from \"react-router\"\r\n\r\nconst MainPage = ({setSignIn, signIn}) => {\r\n    const {store, actions} = useContext(Context)\r\n    const [nodes_, setNodes] = useState([])\r\n    const [links_,setLinks] = useState([])\r\n    const [name, setName] = useState([])\r\n    const [recieved, setRecieved] = useState(false)\r\n    const [logout, setLogout] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const logoutHandle = () => {\r\n        actions.logout();\r\n        setSignIn(false);\r\n        <Redirect to=\"/\" />\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (signIn){\r\n            actions.getGraph(setNodes, setName ,setLinks).then(()=>{\r\n                setRecieved(true)\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {!store.token ? <Redirect to= \"/\" /> :\r\n              (recieved ? \r\n                <div>\r\n                    <h1 style={{textAlign: \"center\"}}>{name}'s Social Bubble</h1>\r\n                    <ForceGraph2D graphData={{nodes: nodes_, links: links_}} nodeId = \"id\" />\r\n                    <button onClick={logoutHandle}> Sign Out </button>\r\n                </div>\r\n                : \r\n                <div>\r\n                    <h1 style={{textAlign: \"center\"}}>Loading...</h1>\r\n                </div>)\r\n            \r\n            }\r\n            \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import './App.css';\r\nimport LoginHeaderWrapper from './Component/LoginHeaderWrapper';\r\nimport { useState } from \"react\"\r\nimport MainPage from './Component/MainPage';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport injectContext from './Component/Store/appContext';\r\n\r\nfunction App() {\r\n  const [signIn, setSignIn] = useState(false)\r\n \r\n  return (\r\n      <Router>\r\n        <div className = \"container\">\r\n          <div className = \"content-wrapper\">\r\n            <Switch>\r\n\r\n              <Route exact path=\"/\" component={() => (<LoginHeaderWrapper signIn={signIn} setSignIn={setSignIn} />)}/>\r\n              <Route exact path=\"/mainpage\" component={() => (<MainPage setSignIn={setSignIn} signIn= {signIn} />)}/>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default injectContext(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nReactDOM.render(\r\n  // // <React.StrictMode>\r\n  // //   <App />\r\n  // // </React.StrictMode>,\r\n  // <BrowserRouter>\r\n  //   <App />\r\n  // </BrowserRouter>,\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}