{"version":3,"sources":["logo.svg","Component/Button.js","Component/Header.js","Component/Credentials.js","Component/Login.js","Component/LoginHeader.js","Component/LoginHeaderWrapper.js","Component/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Credentials","notEntered","setnotEntered","useState","name","setName","email","setEmail","password","setPassword","remember","setRemember","onSubmit","e","preventDefault","console","log","credentials","fetch","process","method","headers","body","JSON","stringify","then","response","json","data","type","placeholder","value","onChange","target","checked","currentTarget","Login","signIn","setSignIn","status","alert","LoginHeader","signIned","setSignIned","cursor","LoginHeaderWrapper","to","MainPage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07a1ad32.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text, onClick}) => {\r\n    \r\n   \r\n\r\n    return (\r\n        <button onClick={onClick} style={{backgroundColor: color}} className = 'btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n    text: 'Add'\r\n}\r\n\r\nButton.propTypes ={\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title,onAdd, showAdd}) => {\r\n    const onClick = () => {\r\n        console.log('Click')\r\n    }\r\n\r\n    return (\r\n        <header className = 'header'>\r\n            <h1>{title}</h1>\r\n            <Button onClick = {onAdd} color={showAdd ? 'red' : 'green'}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nconst headingStyle = {\r\n    color: 'red', \r\n    backgroundColor: 'black'\r\n}\r\n\r\nexport default Header\r\n","import { useState } from \"react\"\r\n\r\nconst {REACT_APP_TEST} = process.env;\r\n\r\n\r\nconst Credentials = ({notEntered, setnotEntered}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(name,email,password,remember)\r\n        const credentials = {name, email, password}\r\n        fetch(`${process.env.REACT_APP_TEST}/signup`,{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(credentials)\r\n        }).then(response => response.json()).then(data => console.log(data))\r\n    \r\n        setnotEntered(!notEntered)\r\n    }\r\n    return (\r\n        <div className=\"cred-container\">\r\n            <form onSubmit={(onSubmit)}>\r\n                <div className='form-control'>\r\n                    <input \r\n                        type='text' \r\n                        placeholder='Name' \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <input \r\n                        type='text' \r\n                        placeholder='Email' \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <input \r\n                        type='text' \r\n                        placeholder='Password' \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='form-control-check'>\r\n                    \r\n                    <input \r\n                        type='checkbox' \r\n                        checked = {remember}\r\n                        value={remember} \r\n                        onChange={(e) => setRemember(e.currentTarget.checked)}\r\n                    /><label>Remember me</label>\r\n                </div>\r\n                <input type='submit' value='Sign up' className='btn btn-block' />\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Credentials\r\n","import { useState } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nconst Login = ({signIn,setSignIn}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const credentials = {email, password}\r\n        fetch(`${process.env.REACT_APP_TEST}/signin`,{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(credentials)\r\n        }).then(response => {\r\n            if (response.status===201){\r\n                alert('Incorrect Email or Password')\r\n            }\r\n            else{\r\n                setSignIn(true)\r\n            }\r\n            response.json()\r\n        }).then(data => console.log(data))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Log in</h1>\r\n            <div className=\"cred-container\">\r\n                \r\n            <form onSubmit={(onSubmit)}>\r\n                <div className='form-control'>\r\n                    <input \r\n                        type='text' \r\n                        placeholder='Email' \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                    />\r\n                </div>\r\n               \r\n                <div className='form-control'>\r\n                    <input \r\n                        type='text' \r\n                        placeholder='Password' \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='form-control-check'>\r\n                    \r\n                    <input \r\n                        type='checkbox' \r\n                        checked = {remember}\r\n                        value={remember} \r\n                        onChange={(e) => setRemember(e.currentTarget.checked)}\r\n                    /><label>Remember me</label>\r\n                </div>\r\n                <input type='submit' value='Sign in' className='btn btn-block' />\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import Credentials from \"./Credentials\"\r\nimport Login from \"./Login\"\r\nimport { useState } from \"react\"\r\n\r\nconst LoginHeader = ({signIn,setSignIn}) => {\r\n    const [notEntered, setnotEntered] = useState(true)\r\n    const [signIned, setSignIned] = useState(false)\r\n\r\n    const onClick = () => {\r\n        setSignIned(true)\r\n    }\r\n    return (\r\n        <div className=\"login-container\">\r\n\r\n            {notEntered \r\n            ?\r\n                (signIned \r\n                ? \r\n                    <Login signIn={signIn} setSignIn={setSignIn}/>\r\n                : \r\n                    <div className=\"signup-header\">\r\n                        <h1>Create account</h1>\r\n                        <h2>Already have an account? </h2> <h2 onClick={onClick} style={{cursor: 'pointer', color:'lightblue'}}>Sign in</h2>\r\n                        <Credentials notEntered={notEntered} setnotEntered={setnotEntered}/>\r\n                    </div>)\r\n            :\r\n                <h1>Successfully entered</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginHeader\r\n","import { Redirect } from \"react-router-dom\"\r\nimport LoginHeader from \"./LoginHeader\"\r\n\r\nconst LoginHeaderWrapper = ({signIn, setSignIn}) => {\r\n    if (signIn){\r\n        return <Redirect to=\"/mainpage\" />;\r\n    }\r\n    return (\r\n        <div className=\"loginBox\">\r\n            <LoginHeader signIn={signIn} setSignIn={setSignIn}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginHeaderWrapper\r\n","\r\nconst MainPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Mainpage</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './Component/Header'\r\nimport Tasks from './Component/Tasks'\r\nimport AddTask from './Component/AddTask'\r\nimport LoginHeaderWrapper from './Component/LoginHeaderWrapper';\r\nimport { useState } from \"react\"\r\nimport { BrowserRouter as Router, Redirect} from 'react-router-dom'\r\nimport { Route, Switch} from 'react-router-dom'\r\nimport MainPage from './Component/MainPage';\r\n//import { useState, useEffect } from 'react';\r\n\r\nimport {Deploy} from './Component/Deploy/Deploy'\r\nfunction App() {\r\n  const [signIn, setSignIn] = useState(false)\r\n  // const [showAddTask,setShowAddTask] = useState(false)\r\n  // const [tasks,setTasks] = useState([\r\n  //     {\r\n  //         id:1,\r\n  //         text: 'Doctors Appointment',\r\n  //         day: 'Feb 5th at 2:30pm',\r\n  //         reminder: true,\r\n  //     },\r\n  //     {\r\n  //         id:2,\r\n  //         text: 'Meeting at school',\r\n  //         day: 'Feb 6th at 1:30pm',\r\n  //         reminder: true,\r\n  //     },\r\n  //     {\r\n  //         id:3,\r\n  //         text: 'Food shopping',\r\n  //         day: 'Feb 6th at 2:30pm',\r\n  //         reminder: false,\r\n  //     }\r\n  // ])\r\n\r\n  // //Delete task\r\n  // const deleteTask = (id) => {\r\n  //   setTasks(tasks.filter((task)=>task.id!==id))\r\n  // }\r\n\r\n  // //togle reminder\r\n  // const toggleReminder = (id) => {\r\n  //   setTasks(tasks.map((task) => task.id===id \r\n  //   ? {...task, reminder: !task.reminder} \r\n  //   : task)\r\n  //   )\r\n  // }\r\n\r\n  // //add task\r\n  // const addTask = (task) => {\r\n  //   const id = Math.floor(Math.random()*10000)+1\r\n  //   const newTask = {id,...task}\r\n  //   setTasks([...tasks,newTask])\r\n  // }\r\n  \r\n  return (\r\n    <Switch>\r\n      <div className = \"container\">\r\n        <div className = \"content-wrapper\">\r\n\r\n          <Route exact path=\"/\" component={() => (<LoginHeaderWrapper signIn={signIn} setSignIn={setSignIn} />)}/>\r\n          <Route exact path=\"/mainpage\" component={MainPage}/>\r\n        </div>\r\n        {/* <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\r\n        {showAddTask && <AddTask onAdd={addTask}/>}\r\n        {tasks.length > 0 ? <Tasks tasks ={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> \r\n        : (\r\n          'No Tasks to Show'\r\n          )} */}\r\n      </div>\r\n    </Switch>\r\n  )\r\n  // const [state, setState] = useState({})\r\n\r\n  // useEffect(()=>{\r\n  //   fetch(\"/api\").then(response => {\r\n  //     if(response.status == 200){\r\n  //       return response.json()\r\n  //     }\r\n  //   }).then(data => setState(data))\r\n  //   .then(error => console.log(error))\r\n  // },[])\r\n  // return (\r\n  //   <div className=\"App\">\r\n  //     <Deploy prop={state}/>\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}