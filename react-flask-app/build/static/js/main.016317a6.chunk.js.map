{"version":3,"sources":["Component/Store/flux.js","Component/Store/appContext.js","Component/Credentials.js","Component/Login.js","Component/AddFriend.js","Component/LoginHeader.js","Component/LoginHeaderWrapper.js","Component/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["getState","getStore","getActions","setStore","console","log","store","token","message","demo","title","background","initial","actions","exampleFunction","changeColor","syncTokenFromSessionStore","sessionStorage","getItem","undefined","logout","removeItem","login","email","password","a","opts","method","headers","body","JSON","stringify","fetch","process","response","status","alert","json","data","setItem","access_token","error","signup","name","getIsUserAddedByFriends","setEmailArray","setFriendName1","setPresetFriend1","setFriendName2","setPresetFriend2","setFriendName3","setPresetFriend3","setFriendName4","setPresetFriend4","emailArray","emails","i","length","addFriendsToDB","friends","getGraph","setNodes","setName","setLinks","nodes","links","user","getMessage","BACKEND_URL","then","resp","catch","index","color","map","elm","Context","React","createContext","injectContext","PassedComponent","props","useState","state","updatedStore","setState","Object","assign","useEffect","Provider","value","Credentials","notEntered","setnotEntered","setEmail","setPassword","remember","setRemember","showPassword","setShowPassword","useContext","toggleFnc","e","preventDefault","className","onSubmit","type","placeholder","onChange","target","onClick","style","checked","currentTarget","Login","signIn","setSignIn","history","useHistory","push","to","src","crossorigin","AddFriend","onAdd","friendName1","friendName2","friendName3","friendName4","presetFriend1","presetFriend2","presetFriend3","presetFriend4","AddFriendToDB","addFriend","friend","LoginHeader","signIned","setSignIned","cursor","LoginHeaderWrapper","MainPage","nodes_","links_","recieved","setRecieved","textAlign","graphData","nodeId","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.016317a6.chunk.js","sourcesContent":["const getState = ({ getStore, getActions, setStore }) => {\r\n\tconsole.log(\"IN GETSTAE\")\r\n\r\n\treturn {\r\n\t\tstore: {\r\n\t\t\ttoken: null,\r\n\t\t\tmessage: null,\r\n\t\t\tdemo: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"FIRST\",\r\n\t\t\t\t\tbackground: \"white\",\r\n\t\t\t\t\tinitial: \"white\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"SECOND\",\r\n\t\t\t\t\tbackground: \"white\",\r\n\t\t\t\t\tinitial: \"white\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tactions: {\r\n\t\t\t// Use getActions to call a function within a fuction\r\n\t\t\texampleFunction: () => {\r\n\t\t\t\tgetActions().changeColor(0, \"green\");\r\n\t\t\t},\r\n\r\n\t\t\tsyncTokenFromSessionStore: () => {\r\n\t\t\t\tconst token = sessionStorage.getItem(\"token\");\r\n\t\t\t\tconsole.log(\"App just loaded, syncing local sessionstorage\")\r\n\t\t\t\tif (token && token != \"\" && token != undefined) setStore({token: token});\r\n\t\t\t},\r\n\r\n\t\t\tlogout: () => {\r\n\t\t\t\tsessionStorage.removeItem(\"token\");\r\n\t\t\t\tconsole.log(\"Log out\");\r\n\t\t\t\tsetStore({token: null});\r\n\t\t\t},\r\n\r\n\r\n            login:  async (email, password) => {\r\n                const opts = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        \"Accept\": \"application/json\",\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: email,\r\n                        password: password\r\n                    })\r\n                };\r\n\r\n                try {\r\n                    const response = await fetch(`${process.env.REACT_APP_TEST}/signin`, opts)\r\n\r\n                    if (response.status!==200){ \r\n                        alert('Incorrect Email or Password');\r\n                        return false;\r\n                    }\r\n                    \r\n                    const data = await response.json();\r\n                    console.log(\"this came from the backend\", data);\r\n                    sessionStorage.setItem(\"token\", data.access_token);\r\n\t\t\t\t\tsetStore({token: data.access_token});\r\n                    return true;\r\n                }\r\n                catch (error){\r\n                    console.error(\"ERROR login in\")\r\n                }\r\n                \r\n                \r\n            },\r\n\r\n\t\t\tsignup: async (name, email, password) => {\r\n\t\t\t\tconst opts = {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\temail: email,\r\n\t\t\t\t\t\tpassword: password\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t\tconst response = await fetch(`${process.env.REACT_APP_TEST}/signup`, opts);\r\n\r\n\t\t\t\tif (response.status!==200){ \r\n\t\t\t\t\talert('Incorrect Email or Password');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsessionStorage.setItem(\"token\", data.token);\r\n\t\t\t\tsetStore({token: data.token});\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tgetIsUserAddedByFriends: async (setEmailArray,  setFriendName1, setPresetFriend1\r\n\t\t\t\t, setFriendName2, setPresetFriend2\r\n\t\t\t\t, setFriendName3, setPresetFriend3\r\n\t\t\t\t, setFriendName4, setPresetFriend4) => {\r\n\t\t\t\tconsole.log(\"IN GET IS USER ADDED\")\r\n\t\t\t\tconst store = getStore();\r\n\t\t\t\tconst opts = {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Authorization\": \"Bearer \" + store.token\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(`${process.env.REACT_APP_TEST}/loadAddFriend`, opts)\r\n\t\t\t\t\tif (response.status!==200){ \r\n\t\t\t\t\t\talert('idk what this error would be');\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst data = await response.json();\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tvar emailArray = data.emails\r\n\t\t\t\t\tsetEmailArray(data.emails)\r\n\t\t\t\t\tfor ( let i = 0; i< emailArray.length; i++){\r\n\t\t\t\t\t\tif (i ==0){\r\n\t\t\t\t\t\t\tconsole.log(\"11111\")\r\n\t\t\t\t\t\tsetFriendName1(emailArray[0]) ;\r\n\t\t\t\t\t\tsetPresetFriend1(true); \r\n\t\t\t\t\t\t}if (i ==1){\r\n\t\t\t\t\t\t\tconsole.log(\"22222\")\r\n\r\n\t\t\t\t\t\t\tsetFriendName2(emailArray[1]) ; \r\n\t\t\t\t\t\t\tsetPresetFriend2(true); \r\n\r\n\t\t\t\t\t\t}if (i ==2){\r\n\t\t\t\t\t\t\tconsole.log(\"33333\")\r\n\r\n\t\t\t\t\t\t\tsetFriendName3(emailArray[2]) ; \r\n\t\t\t\t\t\tsetPresetFriend3(true); \r\n\r\n\t\t\t\t\t\t}if (i ==3){\r\n\t\t\t\t\t\t\tconsole.log(\"44444\")\r\n\r\n\t\t\t\t\t\t\tsetFriendName4(emailArray[3]) ; \r\n\t\t\t\t\t\t\tsetPresetFriend4(true); \r\n\t\t\t\t\t\t}\r\n            \t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t//hopefully this data is the list of gmails\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error){\r\n\t\t\t\t\tconsole.error(\"ERROR get is user added by friends in flux\")\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taddFriendsToDB: async (friends) => {\r\n\t\t\t\tconst store = getStore();\r\n\t\t\t\t\r\n\t\t\t\tconst opts = {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: {\"Content-Type\": \"application/json\", \"Authorization\": \"Bearer \" + store.token},\r\n\t\t\t\t\tbody: JSON.stringify(friends)\r\n\t\t\t\t};\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(`${process.env.REACT_APP_TEST}/addfriend`, opts)\r\n\t\t\t\t\tif (response.status!==200){ \r\n\t\t\t\t\t\talert('idk what this error would be in add friends to db');\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst data = await response.json();\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t// setSignIn(true);\r\n\t\t\t\t\t//hopefully this data is the list of gmails\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error){\r\n\t\t\t\t\tconsole.error(\"ERROR add friends to db in flux\")\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetGraph: async (setNodes, setName, setLinks) => {\r\n\t\t\t\tconsole.log(\"IN GET GRAPH?\")\r\n\t\t\t\tconst store = getStore();\r\n\t\t\t\tconst opts = {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Authorization\": \"Bearer \" + store.token\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(`${process.env.REACT_APP_TEST}/mainpage/session`, opts)\r\n\t\t\t\t\tif (response.status!==200){ \r\n\t\t\t\t\t\talert('Error, no email found in the database');\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst data = await response.json();\r\n\t\t\t\t\tconsole.log(\"this came from the graph\", data);\r\n\t\t\t\t\tsetNodes(data.nodes);\r\n\t\t\t\t\tsetLinks(data.links);\r\n\t\t\t\t\tsetName(data.user);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error){\r\n\t\t\t\t\tconsole.error(\"ERROR get graph\")\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetMessage: () => {\r\n\t\t\t\t// fetching data from the backend\r\n\t\t\t\tfetch(process.env.BACKEND_URL + \"/api/hello\")\r\n\t\t\t\t\t.then(resp => resp.json())\r\n\t\t\t\t\t.then(data => setStore({ message: data.message }))\r\n\t\t\t\t\t.catch(error => console.log(\"Error loading message from backend\", error));\r\n\t\t\t},\r\n\r\n\t\t\tchangeColor: (index, color) => {\r\n\t\t\t\t//get the store\r\n\t\t\t\tconsole.log(\"IN CHANGE OCLR?\")\r\n\r\n\t\t\t\tconst store = getStore();\r\n\r\n\t\t\t\t//we have to loop the entire demo array to look for the respective index\r\n\t\t\t\t//and change its color\r\n\t\t\t\tconst demo = store.demo.map((elm, i) => {\r\n\t\t\t\t\tif (i === index) elm.background = color;\r\n\t\t\t\t\treturn elm;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//reset the global store\r\n\t\t\t\tsetStore({ demo: demo });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default getState;","import React, { useState, useEffect } from \"react\";\r\nimport getState from \"./flux.js\";\r\n\r\n// Don't change, here is where we initialize our context, by default it's just going to be null.\r\nexport const Context = React.createContext(null);\r\n\r\n// This function injects the global store to any view/component where you want to use it, we will inject the context to layout.js, you can see it here:\r\n// https://github.com/4GeeksAcademy/react-hello-webapp/blob/master/src/js/layout.js#L35\r\nconst injectContext = PassedComponent => {\r\n\tconst StoreWrapper = props => {\r\n\t\t//this will be passed as the contenxt value\r\n\t\tconst [state, setState] = useState(\r\n\t\t\tgetState({\r\n\t\t\t\tgetStore: () => state.store,\r\n\t\t\t\tgetActions: () => state.actions,\r\n\t\t\t\tsetStore: updatedStore =>\r\n\t\t\t\t\tsetState({\r\n\t\t\t\t\t\tstore: Object.assign(state.store, updatedStore),\r\n\t\t\t\t\t\tactions: { ...state.actions }\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t/**\r\n\t\t\t * EDIT THIS!\r\n\t\t\t * This function is the equivalent to \"window.onLoad\", it only runs once on the entire application lifetime\r\n\t\t\t * you should do your ajax requests or fetch api requests here. Do not use setState() to save data in the\r\n\t\t\t * store, instead use actions, like this:\r\n\t\t\t **/\r\n\t\t\tstate.actions.syncTokenFromSessionStore();\r\n\t\t}, []);\r\n\r\n\t\t// The initial value for the context is not null anymore, but the current state of this component,\r\n\t\t// the context will now have a getStore, getActions and setStore functions available, because they were declared\r\n\t\t// on the state of this component\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={state}>\r\n\t\t\t\t<PassedComponent {...props} />\r\n\t\t\t</Context.Provider>\r\n\t\t);\r\n\t};\r\n\treturn StoreWrapper;\r\n};\r\n\r\nexport default injectContext;","import { useState } from \"react\"\r\nimport { Context } from \"./Store/appContext\";\r\nimport { useContext } from \"react\";\r\nconst {REACT_APP_TEST} = process.env;\r\n\r\n\r\nconst Credentials = ({notEntered, setnotEntered}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const {store, actions} = useContext(Context)\r\n    const token = sessionStorage[\"token\"];\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(name,email,password,remember)\r\n        actions.signup(name,email,password).then(()=>{\r\n            console.log(\"SETING NOTENTERED TO FALSE\")\r\n            setnotEntered(false)\r\n        })\r\n    }\r\n\r\n    const toggleFnc = (e) => {\r\n        e.preventDefault()\r\n        setShowPassword(!showPassword)\r\n    }\r\n    return (\r\n        <div className=\"cred-container\">\r\n            <form onSubmit={(onSubmit)}>\r\n                <div className='form-control'>\r\n                    <input \r\n                        type='text' \r\n                        placeholder='Name' \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <input \r\n                        type='text' \r\n                        placeholder='Email' \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='form-control'>\r\n                    <input \r\n                        type={showPassword ? \"text\" : \"password\"} \r\n                        placeholder='Password' \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    {showPassword?\r\n                    <button  className='show-password-btn' onClick={toggleFnc} \r\n                    style={{background: \"url('https://img.icons8.com/material-outlined/24/000000/closed-eye.png')\"}}\r\n                    ></button>\r\n                    :<button  className='show-password-btn' onClick={toggleFnc}\r\n                    style={{background: \"url('https://img.icons8.com/material-outlined/24/000000/visible--v2.png')\"}}\r\n                    ></button>\r\n                    }\r\n\r\n                </div>\r\n                <div className='form-control-check'>\r\n                    \r\n                    <input \r\n                        type='checkbox' \r\n                        checked = {remember}\r\n                        value={remember} \r\n                        onChange={(e) => setRemember(e.currentTarget.checked)}\r\n                    /><label>Remember me</label>\r\n                </div>\r\n                <input type='submit' value='Sign up' className='btn btn-block' />\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Credentials\r\n","import { useState } from \"react\"\r\nimport { FaAcquisitionsIncorporated } from \"react-icons/fa\";\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Context } from \"./Store/appContext\";\r\n// import { FontAwesomeIcon } from '@fontawesome/react-fontawesome'\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from \"react-router\";\r\nimport { useContext } from \"react\";\r\n\r\nconst Login = ({signIn,setSignIn}) => {\r\n    const {store, actions} = useContext(Context)\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [remember, setRemember] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const token = sessionStorage[\"token\"];\r\n    const history = useHistory()\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        actions.login(email,password).then(()=>{\r\n            setSignIn(true)\r\n        })\r\n    };\r\n\r\n    const toggleFnc = (e) => {\r\n        e.preventDefault()\r\n        setShowPassword(!showPassword)\r\n    };\r\n\r\n    if (store.token && store.token != \"\" && store.token != undefined) history.push(\"/mainpage\");\r\n\r\n    return (\r\n        <div>\r\n            {(store.token && store.token != \"\" && store.token != undefined) ? <Redirect to=\"/mainpage\"/> :\r\n                <div className=\"signup-header\">\r\n                    <script src=\"https://kit.fontawesome.com/a076d05399.js\" crossorigin=\"anonymous\"></script>\r\n\r\n                    <h1>Log in</h1>\r\n                    <div className=\"cred-container\">\r\n                        \r\n                        <form onSubmit={(onSubmit)}>\r\n                            <div className='form-control'>\r\n                                <input \r\n                                    type='text' \r\n                                    placeholder='Email' \r\n                                    value={email} \r\n                                    onChange={(e) => setEmail(e.target.value)} \r\n                                />\r\n                            </div>\r\n\r\n                            <div className='form-control'>\r\n\r\n                                <input \r\n                                    type={showPassword ? \"text\" : \"password\"} \r\n                                    placeholder='Password' \r\n                                    value={password} \r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    \r\n                                />\r\n                                {showPassword?\r\n                                <button  className='show-password-btn' onClick={toggleFnc} \r\n                                style={{background: \"url('https://img.icons8.com/material-outlined/24/000000/closed-eye.png')\"}}\r\n                                ></button>\r\n                                :<button  className='show-password-btn' onClick={toggleFnc}\r\n                                style={{background: \"url('https://img.icons8.com/material-outlined/24/000000/visible--v2.png')\"}}\r\n                                ></button>\r\n                                }\r\n\r\n                            </div>\r\n\r\n                            <div className='form-control-check'>\r\n                                \r\n                                <input \r\n                                    type='checkbox' \r\n                                    checked = {remember}\r\n                                    value={remember} \r\n                                    onChange={(e) => setRemember(e.currentTarget.checked)}\r\n                                /><label>Remember me</label>\r\n\r\n                            </div>\r\n                            <input type='submit' value='Sign in' className='btn btn-block' />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { Component, useState, useEffect } from \"react\"\r\nimport { Context } from \"./Store/appContext\"\r\nimport { useContext } from \"react\";\r\nimport getIsUserAddedByFriends from \"../Component/Store/flux\";\r\n\r\nconst {REACT_APP_TEST} = process.env;\r\n\r\n\r\nconst AddFriend = ({onAdd, setSignIn}) => {\r\n     const [friendName1, setFriendName1] = useState('')\r\n     const [friendName2, setFriendName2] = useState('')\r\n     const [friendName3, setFriendName3] = useState('')\r\n     const [friendName4, setFriendName4] = useState('')\r\n     const {store, actions} = useContext(Context)\r\n\r\n     const [presetFriend1, setPresetFriend1] = useState(false)\r\n     const [presetFriend2, setPresetFriend2] = useState(false)\r\n     const [presetFriend3, setPresetFriend3] = useState(false)\r\n     const [presetFriend4, setPresetFriend4] = useState(false)\r\n\r\n     const [emailArray, setEmailArray] = useState([])\r\n\r\n    //  const token = sessionStorage[\"token\"];\r\n\r\n     useEffect(() => {\r\n        // var listOfFriendsAlreadyAdded = actions.getIsUserAddedByFriends().then(()=>console.log(\"yay\"));\r\n        actions.getIsUserAddedByFriends(setEmailArray, setFriendName1, setPresetFriend1\r\n            , setFriendName2, setPresetFriend2\r\n            , setFriendName3, setPresetFriend3\r\n            , setFriendName4, setPresetFriend4\r\n            ).then(() => {\r\n            console.log(\"yay\")\r\n            console.log(\"here is my email array\", emailArray)\r\n        });\r\n        // var emails = listOfFriendsAlreadyAdded.emails;\r\n        //  console.log(emails);\r\n        \r\n        console.log(\"^^in addfriend, list of friends pls\");\r\n        //        console.log(typeof(emails));\r\n        if(emailArray) //emails\r\n        {\r\n            // for ( let i = 0; i< emailArray.length; i++){\r\n            //     if (i ==0){\r\n            //         console.log(\"11111\")\r\n            //        setFriendName1(emailArray[0]) ;\r\n            //        setPresetFriend1(true); \r\n            //     }if (i ==1){\r\n            //         console.log(\"22222\")\r\n\r\n            //         setFriendName2(emailArray[1]) ; \r\n            //         setPresetFriend2(true); \r\n\r\n            //      }if (i ==2){\r\n            //         console.log(\"33333\")\r\n\r\n            //         setFriendName3(emailArray[2]) ; \r\n            //        setPresetFriend3(true); \r\n\r\n            //      }if (i ==3){\r\n            //         console.log(\"44444\")\r\n\r\n            //         setFriendName4(emailArray[3]) ; \r\n            //         setPresetFriend4(true); \r\n            //      }\r\n            // }\r\n        }\r\n\r\n    }, []);\r\n\r\n    // Here add:\r\n    // - UseEffect hook to run the fetch request when the user comes to this Component\r\n    // - Create a fetch request to the backend you created\r\n    // - Recieve the data from the backend (array of emails)\r\n    // - Depending on the state of the data, set friendName1 etc to the data email or set a bool saying friend email not found\r\n    // - In the return statement, make a bool such that if friendName1 is not empty, put in friendName1 into the field, otherwise leave it blank\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const friends = {friendName1, friendName2, friendName3, friendName4}\r\n        console.log(friends)\r\n\r\n\r\n        var AddFriendToDB = actions.addFriendsToDB(friends);\r\n        setSignIn(AddFriendToDB);\r\n    }\r\n    return (\r\n       <form className='add-friend-container' onSubmit={onSubmit}>\r\n           <div className='add-friend-form'> \r\n               <label>1.</label>\r\n               { \r\n                !presetFriend1 ?\r\n                    <input type ='text' placeholder='Add Friend'\r\n                    value={friendName1} \r\n                    onChange ={(e)=>setFriendName1(e.target.value)}/>\r\n                    :\r\n                    <input type ='text' placeholder='friri'\r\n                     value={friendName1} />\r\n               }\r\n                \r\n            </div>\r\n            <div className='add-friend-form'>\r\n               <label>2.</label>\r\n               { \r\n                !presetFriend2 ?\r\n                    <input type ='text' placeholder='Add Friend'\r\n                    value={friendName2} \r\n                    onChange ={(e)=>setFriendName2(e.target.value)}/>\r\n                    :\r\n                    <input type ='text' placeholder='friri'\r\n                     value={friendName2} />\r\n               }\r\n            </div>\r\n            <div className='add-friend-form'>\r\n               <label>3.</label>\r\n               { \r\n                !presetFriend3 ?\r\n                    <input type ='text' placeholder='Add Friend'\r\n                    value={friendName3} \r\n                    onChange ={(e)=>setFriendName3(e.target.value)}/>\r\n                    :\r\n                    <input type ='text' placeholder='friri'\r\n                     value={friendName3} />\r\n               }\r\n            </div>\r\n            <div className='add-friend-form'>\r\n               <label>4.</label>\r\n               { \r\n                !presetFriend4 ?\r\n                    <input type ='text' placeholder='Add Friend'\r\n                    value={friendName4} \r\n                    onChange ={(e)=>setFriendName4(e.target.value)}/>\r\n                    :\r\n                    <input type ='text' placeholder='friri'\r\n                     value={friendName4} />\r\n               }\r\n            </div>\r\n            \r\n            <input type='submit' value='Continue' className='btn btn-block' />\r\n\r\n       </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddFriend\r\n","import Credentials from \"./Credentials\"\r\nimport Login from \"./Login\"\r\nimport { useState } from \"react\"\r\nimport AddFriend from \"./AddFriend\"\r\nimport { Context } from \"./Store/appContext\"\r\nimport { useContext } from \"react\"\r\nconst addFriend = (friend) =>{\r\n    console.log(friend)\r\n  }\r\n\r\nconst LoginHeader = ({signIn,setSignIn}) => {\r\n    const [notEntered, setnotEntered] = useState(true);\r\n    const [signIned, setSignIned] = useState(false);\r\n    const {store, actions} = useContext(Context);    \r\n    const onClick = () => {\r\n        setSignIned(true)\r\n    }\r\n\r\n    console.log(\"does it at least comehere\")\r\n    return (\r\n        <div className=\"login-container\">\r\n\r\n            {!store.token\r\n            ?\r\n                (signIned \r\n                ? \r\n                    <Login signIn={signIn} setSignIn={setSignIn}/>\r\n                : \r\n                <div className=\"signup-header\">\r\n                    <h1>Create account</h1>\r\n                    <h2>Already have an account? </h2> <h2 className=\"link\" onClick={onClick} style={{cursor: 'pointer'}}>Sign in</h2>\r\n                    <Credentials notEntered={notEntered} setnotEntered={setnotEntered}/>\r\n                </div>)\r\n                :\r\n                <div >\r\n                    <h1 className=\"add-friends-header\">Add a maximum of 4 people to your Covid-19 social bubble</h1>\r\n                    <AddFriend onAdd={addFriend} setSignIn={setSignIn}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginHeader\r\n","import { Redirect } from \"react-router-dom\"\r\nimport LoginHeader from \"./LoginHeader\"\r\n\r\nconst LoginHeaderWrapper = ({signIn, setSignIn}) => {\r\n     if (signIn){\r\n        return <Redirect to=\"/mainpage\" />;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"loginBox\">\r\n                <LoginHeader signIn={signIn} setSignIn={setSignIn}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginHeaderWrapper\r\n","import { useState, useEffect } from \"react\"\r\nimport { ForceGraph2D } from 'react-force-graph'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Context } from \"./Store/appContext\"\r\nimport { useContext } from \"react\"\r\nimport { Redirect, useHistory } from \"react-router\"\r\n\r\nconst MainPage = ({setSignIn, signIn}) => {\r\n    const {store, actions} = useContext(Context)\r\n    const [nodes_, setNodes] = useState([])\r\n    const [links_,setLinks] = useState([])\r\n    const [name, setName] = useState([])\r\n    const [recieved, setRecieved] = useState(false)\r\n    const [logout, setLogout] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const logoutHandle = () => {\r\n        actions.logout();\r\n        setSignIn(false);\r\n        <Redirect to=\"/\" />\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (signIn){\r\n            actions.getGraph(setNodes, setName ,setLinks).then(()=>{\r\n                setRecieved(true)\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {!store.token ? <Redirect to= \"/\" /> :\r\n              (recieved ? \r\n                <div>\r\n                    <h1 style={{textAlign: \"center\"}}>{name}'s Social Bubble</h1>\r\n                    <ForceGraph2D graphData={{nodes: nodes_, links: links_}} nodeId = \"id\" />\r\n                    <button onClick={logoutHandle}> Sign Out </button>\r\n                </div>\r\n                : \r\n                <div>\r\n                    <h1 style={{textAlign: \"center\"}}>Loading...</h1>\r\n                </div>)\r\n            \r\n            }\r\n            \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import './App.css';\r\nimport LoginHeaderWrapper from './Component/LoginHeaderWrapper';\r\nimport { useState } from \"react\"\r\nimport MainPage from './Component/MainPage';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport injectContext from './Component/Store/appContext';\r\n\r\nfunction App() {\r\n  const [signIn, setSignIn] = useState(false)\r\n \r\n  return (\r\n      <Router>\r\n        <div className = \"container\">\r\n          <div className = \"content-wrapper\">\r\n            <Switch>\r\n\r\n              <Route exact path=\"/\" component={() => (<LoginHeaderWrapper signIn={signIn} setSignIn={setSignIn} />)}/>\r\n              <Route exact path=\"/mainpage\" component={() => (<MainPage setSignIn={setSignIn} signIn= {signIn} />)}/>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default injectContext(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nReactDOM.render(\r\n  // // <React.StrictMode>\r\n  // //   <App />\r\n  // // </React.StrictMode>,\r\n  // <BrowserRouter>\r\n  //   <App />\r\n  // </BrowserRouter>,\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}