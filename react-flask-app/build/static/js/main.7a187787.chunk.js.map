{"version":3,"sources":["Component/Store/flux.js","Component/Store/appContext.js","Component/Credentials.js","Component/Login.js","Component/AddFriend.js","Component/LoginHeader.js","Component/LoginHeaderWrapper.js","images/pythonLogo.png","images/reactLogo.png","images/mongodbLogo.png","images/flaskLogo.svg","Component/LandingPage.js","Component/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["getState","getStore","getActions","setStore","console","log","store","token","message","demo","title","background","initial","actions","exampleFunction","changeColor","syncTokenFromSessionStore","sessionStorage","getItem","undefined","logout","removeItem","login","email","password","a","opts","method","headers","body","JSON","stringify","fetch","response","status","alert","json","data","setItem","access_token","error","signup","name","addFriendsToDB","friends","friendsList","i","forEach","friend","delete","getGraph","setNodes","setName","setLinks","nodes","links","user","getMessage","process","BACKEND_URL","then","resp","catch","index","color","map","elm","Context","React","createContext","injectContext","PassedComponent","props","useState","state","updatedStore","setState","Object","assign","useEffect","Provider","value","Credentials","notEntered","setnotEntered","setEmail","setPassword","useContext","onSubmit","e","preventDefault","className","type","placeholder","onChange","target","Login","signIn","setSignIn","history","useHistory","push","to","onClick","goBack","AddFriend","onAdd","setFriendsList","userInput","setUserInput","crossOutFriend","handleToggle","currentTarget","id","mapped","addFriendToList","temp","length","AddFriendToDB","style","height","addFriend","LoginHeader","signIned","setSignIned","LoginHeaderWrapper","LandingPage","src","reactLogo","pythonLogo","flaskLogo","mongodbLogo","href","MainPage","nodes_","links_","recieved","setRecieved","graphData","nodeId","nodeColor","node","group","nodeVal","Math","pow","textAlign","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a187787.chunk.js","sourcesContent":["const getState = ({ getStore, getActions, setStore }) => {\r\n\tconsole.log(\"IN GETSTAE\")\r\n\r\n\treturn {\r\n\t\tstore: {\r\n\t\t\ttoken: null,\r\n\t\t\tmessage: null,\r\n\t\t\tdemo: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"FIRST\",\r\n\t\t\t\t\tbackground: \"white\",\r\n\t\t\t\t\tinitial: \"white\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"SECOND\",\r\n\t\t\t\t\tbackground: \"white\",\r\n\t\t\t\t\tinitial: \"white\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tactions: {\r\n\t\t\t// Use getActions to call a function within a fuction\r\n\t\t\texampleFunction: () => {\r\n\t\t\t\tgetActions().changeColor(0, \"green\");\r\n\t\t\t},\r\n\r\n\t\t\tsyncTokenFromSessionStore: () => {\r\n\t\t\t\tconst token = sessionStorage.getItem(\"token\");\r\n\t\t\t\tconsole.log(\"App just loaded, syncing local sessionstorage\", token)\r\n\t\t\t\tif (token && token != \"\" && token != undefined) setStore({token: token});\r\n\t\t\t},\r\n\r\n\t\t\tlogout: () => {\r\n\t\t\t\tsessionStorage.removeItem(\"token\");\r\n\t\t\t\tconsole.log(\"Log out\");\r\n\t\t\t\tsetStore({token: null});\r\n\t\t\t},\r\n\r\n\r\n            login:  async (email, password) => {\r\n                const opts = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        \"Accept\": \"application/json\",\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: email,\r\n                        password: password\r\n                    })\r\n                };\r\n\r\n                try {\r\n                    const response = await fetch(`https://covid-bubble.onrender.com/signin`, opts)\r\n                    if (response.status!==200){ \r\n                        alert('Incorrect Email or Password');\r\n                        return false;\r\n                    }\r\n                    \r\n                    const data = await response.json();\r\n                    console.log(\"this came from the backend\", data);\r\n                    sessionStorage.setItem(\"token\", data.access_token);\r\n\t\t\t\t\tsetStore({token: data.access_token});\r\n                    return true;\r\n                }\r\n                catch (error){\r\n                    console.error(\"ERROR login in\")\r\n                }\r\n                \r\n                \r\n            },\r\n\r\n\t\t\tsignup: async (name, email, password) => {\r\n\t\t\t\tconst opts = {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\temail: email,\r\n\t\t\t\t\t\tpassword: password\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t\tconst response = await fetch(`https://covid-bubble.onrender.com/signup`, opts);\r\n\r\n\t\t\t\tif (response.status!==200){ \r\n\t\t\t\t\talert('Incorrect Email or Password');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"ok so it comes here? and its fine?\")\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsessionStorage.setItem(\"token\", data.token);\r\n\t\t\t\tsetStore({token: data.token});\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\t// getIsUserAddedByFriends: async (setEmailArray,  setFriendName1, setPresetFriend1\r\n\t\t\t// \t, setFriendName2, setPresetFriend2\r\n\t\t\t// \t, setFriendName3, setPresetFriend3\r\n\t\t\t// \t, setFriendName4, setPresetFriend4) => {\r\n\t\t\t// \tconsole.log(\"IN GET IS USER ADDED\")\r\n\t\t\t// \tconst store = getStore();\r\n\t\t\t// \tconst opts = {\r\n\t\t\t// \t\theaders: {\r\n\t\t\t// \t\t\t\"Authorization\": \"Bearer \" + store.token\r\n\t\t\t// \t\t}\r\n\t\t\t// \t}\r\n\t\t\t// \ttry {\r\n\t\t\t// \t\tconst response = await fetch(`${process.env.REACT_APP_TEST}/loadAddFriend`, opts)\r\n\t\t\t// \t\tif (response.status!==200){ \r\n\t\t\t// \t\t\talert('idk what this error would be');\r\n\t\t\t// \t\t\treturn false;\r\n\t\t\t// \t\t}\r\n\t\t\t// \t\tconst data = await response.json();\r\n\t\t\t// \t\tconsole.log(data);\r\n\t\t\t// \t\tvar emailArray = data.emails\r\n\t\t\t// \t\tsetEmailArray(data.emails)\r\n\t\t\t// \t\tfor ( let i = 0; i< emailArray.length; i++){\r\n\t\t\t// \t\t\tif (i ==0){\r\n\t\t\t// \t\t\t\tconsole.log(\"11111\")\r\n\t\t\t// \t\t\tsetFriendName1(emailArray[0]) ;\r\n\t\t\t// \t\t\tsetPresetFriend1(true); \r\n\t\t\t// \t\t\t}if (i ==1){\r\n\t\t\t// \t\t\t\tconsole.log(\"22222\")\r\n\r\n\t\t\t// \t\t\t\tsetFriendName2(emailArray[1]) ; \r\n\t\t\t// \t\t\t\tsetPresetFriend2(true); \r\n\r\n\t\t\t// \t\t\t}if (i ==2){\r\n\t\t\t// \t\t\t\tconsole.log(\"33333\")\r\n\r\n\t\t\t// \t\t\t\tsetFriendName3(emailArray[2]) ; \r\n\t\t\t// \t\t\tsetPresetFriend3(true); \r\n\r\n\t\t\t// \t\t\t}if (i ==3){\r\n\t\t\t// \t\t\t\tconsole.log(\"44444\")\r\n\r\n\t\t\t// \t\t\t\tsetFriendName4(emailArray[3]) ; \r\n\t\t\t// \t\t\t\tsetPresetFriend4(true); \r\n\t\t\t// \t\t\t}\r\n      //       \t\t}\r\n\t\t\t\t\t\r\n\t\t\t// \t\t//hopefully this data is the list of gmails\r\n\t\t\t// \t\treturn true;\r\n\t\t\t// \t}\r\n\t\t\t// \tcatch (error){\r\n\t\t\t// \t\tconsole.error(\"ERROR get is user added by friends in flux\")\r\n\t\t\t// \t}\r\n\t\t\t// },\r\n\t\t\taddFriendsToDB: async (friends) => {\r\n\t\t\t\tconsole.log(\"so whats the matter here\");\r\n\t\t\t\t// syncTokenFromSessionStore();\r\n\t\t\t\tconst store = getStore();\r\n\t\t\t\tconsole.log(\"friends\", friends);\r\n\r\n\t\t\t\tvar friendsList = {};\r\n\t\t\t\tvar i = 1;\r\n\t\t\t\tconsole.log(\"friends\", friends);\r\n\t\t\t\tfriends.forEach((friend) => {\r\n\t\t\t\t\tif(!friend.delete) {\r\n\t\t\t\t\t\tfriendsList[i] = friend.name;\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(\"22244\", store.token);\r\n\t\t\t\tconsole.log(\"is this the prob\", friendsList)\r\n\t\t\t\tconst opts = {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: {\"Content-Type\": \"application/json\", \"Authorization\": \"Bearer \" + store.token},\r\n\t\t\t\t\tbody: JSON.stringify(friendsList)\r\n\t\t\t\t};\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(`https://covid-bubble.onrender.com/addfriend`, opts)\r\n\t\t\t\t\t// if (response.status!==200){ \r\n\t\t\t\t\t// \tconsole.log(response.status, \"response status\");\r\n\t\t\t\t\t// \talert('idk what this error would be in add friends to db');\r\n\t\t\t\t\t// \treturn false;\r\n\t\t\t\t\t// }\r\n\t\t\t\t\tconst data = await response.json();\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t// setSignIn(true);\r\n\t\t\t\t\t//hopefully this data is the list of gmails\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error){\r\n\t\t\t\t\tconsole.error(\"ERROR add friends to db in flux\")\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetGraph: async (setNodes, setName, setLinks) => {\r\n\t\t\t\tconsole.log(\"IN GET GRAPH?\")\r\n\t\t\t\tconst store = getStore();\r\n\t\t\t\tconst opts = {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Authorization\": \"Bearer \" + store.token\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(`https://covid-bubble.onrender.com/mainpage/session`, opts)\r\n\t\t\t\t\tif (response.status!==200){ \r\n\t\t\t\t\t\talert('Error, no email found in the database');\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst data = await response.json();\r\n\t\t\t\t\tconsole.log(\"this came from the graph\", data);\r\n\t\t\t\t\tsetNodes(data.nodes);\r\n\t\t\t\t\tsetLinks(data.links);\r\n\t\t\t\t\tsetName(data.user);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error){\r\n\t\t\t\t\tconsole.error(\"ERROR get graph\")\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetMessage: () => {\r\n\t\t\t\t// fetching data from the backend\r\n\t\t\t\tfetch(process.env.BACKEND_URL + \"/api/hello\")\r\n\t\t\t\t\t.then(resp => resp.json())\r\n\t\t\t\t\t.then(data => setStore({ message: data.message }))\r\n\t\t\t\t\t.catch(error => console.log(\"Error loading message from backend\", error));\r\n\t\t\t},\r\n\r\n\t\t\tchangeColor: (index, color) => {\r\n\t\t\t\t//get the store\r\n\t\t\t\tconsole.log(\"IN CHANGE OCLR?\")\r\n\r\n\t\t\t\tconst store = getStore();\r\n\r\n\t\t\t\t//we have to loop the entire demo array to look for the respective index\r\n\t\t\t\t//and change its color\r\n\t\t\t\tconst demo = store.demo.map((elm, i) => {\r\n\t\t\t\t\tif (i === index) elm.background = color;\r\n\t\t\t\t\treturn elm;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//reset the global store\r\n\t\t\t\tsetStore({ demo: demo });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default getState;","import React, { useState, useEffect } from \"react\";\r\nimport getState from \"./flux.js\";\r\n\r\n// Don't change, here is where we initialize our context, by default it's just going to be null.\r\nexport const Context = React.createContext(null);\r\n\r\n// This function injects the global store to any view/component where you want to use it, we will inject the context to layout.js, you can see it here:\r\n// https://github.com/4GeeksAcademy/react-hello-webapp/blob/master/src/js/layout.js#L35\r\nconst injectContext = PassedComponent => {\r\n\tconst StoreWrapper = props => {\r\n\t\t//this will be passed as the contenxt value\r\n\t\tconst [state, setState] = useState(\r\n\t\t\tgetState({\r\n\t\t\t\tgetStore: () => state.store,\r\n\t\t\t\tgetActions: () => state.actions,\r\n\t\t\t\tsetStore: updatedStore =>\r\n\t\t\t\t\tsetState({\r\n\t\t\t\t\t\tstore: Object.assign(state.store, updatedStore),\r\n\t\t\t\t\t\tactions: { ...state.actions }\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t/**\r\n\t\t\t * EDIT THIS!\r\n\t\t\t * This function is the equivalent to \"window.onLoad\", it only runs once on the entire application lifetime\r\n\t\t\t * you should do your ajax requests or fetch api requests here. Do not use setState() to save data in the\r\n\t\t\t * store, instead use actions, like this:\r\n\t\t\t **/\r\n\t\t\tstate.actions.syncTokenFromSessionStore();\r\n\t\t}, []);\r\n\r\n\t\t// The initial value for the context is not null anymore, but the current state of this component,\r\n\t\t// the context will now have a getStore, getActions and setStore functions available, because they were declared\r\n\t\t// on the state of this component\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={state}>\r\n\t\t\t\t<PassedComponent {...props} />\r\n\t\t\t</Context.Provider>\r\n\t\t);\r\n\t};\r\n\treturn StoreWrapper;\r\n};\r\n\r\nexport default injectContext;","import { useState } from \"react\"\r\nimport { Context } from \"./Store/appContext\";\r\nimport { useContext } from \"react\";\r\nconst {REACT_APP_TEST} = process.env;\r\n\r\n\r\nconst Credentials = ({notEntered, setnotEntered}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const {store, actions} = useContext(Context)\r\n    const token = sessionStorage[\"token\"];\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(name,email,password)\r\n        actions.signup(name,email,password).then(()=>{\r\n            console.log(\"SETING NOTENTERED TO FALSE\")\r\n            setnotEntered(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(onSubmit)}>\r\n            <div className=\"user-input-form\">\r\n                <input className='user-text-input'\r\n                    type='text' \r\n                    placeholder='Name' \r\n                    value={name} \r\n                    onChange={(e) => setName(e.target.value)} \r\n                />\r\n            </div>\r\n            <div className='user-input-form'>\r\n                <input className='user-text-input'\r\n                    type='text' \r\n                    placeholder='Email' \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </div>\r\n                <div className='user-input-form'>\r\n                <input className='user-text-input'\r\n                    type=\"password\"\r\n                    placeholder='Password' \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </div>\r\n            <input type='submit' value='Sign up' className='main-button' />\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Credentials\r\n","import { useState } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Context } from \"./Store/appContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useContext } from \"react\";\r\n\r\nconst Login = ({signIn,setSignIn}) => {\r\n    const {store, actions} = useContext(Context)\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const token = sessionStorage[\"token\"];\r\n    const history = useHistory()\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        actions.login(email,password).then(()=>{\r\n            setSignIn(true)\r\n        })\r\n    };    \r\n\r\n    if (store.token && store.token != \"\" && store.token != undefined) history.push(\"/mainpage\");\r\n\r\n    return (\r\n        <div>\r\n            {(store.token && store.token != \"\" && store.token != undefined) ? <Redirect to=\"/mainpage\"/> :\r\n                <div className=\"box-content-container\">\r\n                    <div  className=\"header-title\">Sign in</div>\r\n                        <form onSubmit={(onSubmit)}>\r\n                            <div className='user-input-form'>\r\n                                <input className='user-text-input'\r\n                                    type='text' \r\n                                    placeholder='Email' \r\n                                    value={email} \r\n                                    onChange={(e) => setEmail(e.target.value)} \r\n                                />\r\n                            </div>\r\n\r\n                            <div className='user-input-form'>\r\n                                <input className='user-text-input'\r\n                                    type=\"password\"\r\n                                    placeholder='Password' \r\n                                    value={password} \r\n                                    onChange={(e) => setPassword(e.target.value)}    \r\n                                />\r\n                            </div>\r\n                            <input type='submit' value='Sign in' className='main-button' />\r\n                            \r\n                        </form>\r\n                        \r\n                        <div className=\"login-paragraph\">\r\n                            Don't have an account? <span className=\"highlight\" onClick={history.goBack} >Sign up</span>\r\n                            <br></br>\r\n                            <span className=\"or\">or</span>\r\n                            <br></br>\r\n                            Sign in with a <span className=\"highlight\">sample account</span> to see Covid Bubble in action\r\n                        </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { Component, useState, useEffect } from \"react\"\r\nimport { Context } from \"./Store/appContext\"\r\nimport { useContext } from \"react\";\r\nimport { Scrollbar } from 'react-scrollbars-custom';\r\n\r\nconst AddFriend = ({onAdd, setSignIn}) => {\r\n    const [friendsList, setFriendsList] = useState([])\r\n    const [userInput, setUserInput] = useState('');\r\n    const {store, actions} = useContext(Context)\r\n\r\n    const handleAddFriend = (e) => {\r\n        e.preventDefault();\r\n        addFriendToList(userInput);\r\n        setUserInput(\"\");\r\n    };\r\n\r\n    //to remove friend (just crossing out)\r\n    const crossOutFriend = (e) => {\r\n        e.preventDefault()\r\n        handleToggle(e.currentTarget.id)\r\n    }; \r\n\r\n    const handleToggle = (id) => {\r\n        let mapped = friendsList.map(friend => {\r\n          return friend.id == id ? { ...friend, delete: !friend.delete } : { ...friend};\r\n        });\r\n        setFriendsList(mapped);\r\n    }\r\n\r\n    const addFriendToList = (userInput) => {\r\n        let temp = friendsList;\r\n        temp.push({id: friendsList.length + 1, name: userInput, delete: false });\r\n        setFriendsList(temp);\r\n    }\r\n    //  const token = sessionStorage[\"token\"];\r\n\r\n    // Here add:\r\n    // - UseEffect hook to run the fetch request when the user comes to this Component\r\n    // - Create a fetch request to the backend you created\r\n    // - Recieve the data from the backend (array of emails)\r\n    // - Depending on the state of the data, set friendName1 etc to the data email or set a bool saying friend email not found\r\n    // - In the return statement, make a bool such that if friendName1 is not empty, put in friendName1 into the field, otherwise leave it blank\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"why notn here?\");\r\n        var AddFriendToDB = actions.addFriendsToDB(friendsList);\r\n        setSignIn(AddFriendToDB);\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n        <h1 className=\"header-title\">Friends List</h1>                    \r\n\r\n       <form className='box-content-container' onSubmit={onSubmit}>\r\n           <div className=\"friends-list-scroll-area\">\r\n            <Scrollbar style={{  height: 120 }}>     \r\n                {friendsList.map(friend => {\r\n                    return (\r\n                        <div id={friend.id}  key={friend.id + friend.name} \r\n                        className={friend.delete ? \"friend strike-thru\" : \"friend\"} \r\n                        onClick={crossOutFriend}>\r\n                            <span className=\"highlight\">{friend.name}</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </Scrollbar>    \r\n           </div>\r\n           <div className=\"add-new-friend-header\">\r\n                Add New Friend\r\n           </div>\r\n           <div className=\"user-input-form\">\r\n           <input className=\"user-text-input\" value={userInput} type=\"text\" placeholder=\"Enter friend's email\"\r\n            onChange={(e) => {setUserInput(e.currentTarget.value)}}/>\r\n            <button onClick={handleAddFriend}></button>\r\n           </div>\r\n            <input type='submit' value='View Bubble' className='main-button' />\r\n       </form>\r\n       </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AddFriend\r\n","import Credentials from \"./Credentials\"\r\nimport Login from \"./Login\"\r\nimport { useState } from \"react\"\r\nimport AddFriend from \"./AddFriend\"\r\nimport { Context } from \"./Store/appContext\"\r\nimport { useContext } from \"react\"\r\n\r\nconst addFriend = (friend) =>{\r\n    console.log(friend)\r\n  }\r\n\r\nconst LoginHeader = ({signIn,setSignIn}) => {\r\n    const [notEntered, setnotEntered] = useState(true);\r\n    const [signIned, setSignIned] = useState(false);\r\n    const {store, actions} = useContext(Context);    \r\n    const onClick = () => {\r\n        setSignIned(true)\r\n    }\r\n    console.log(\"does it come here??? \")\r\n    return (\r\n        <div className=\"box-container\">\r\n            {!store.token\r\n            ?\r\n                (signIned \r\n                ? \r\n                    <Login signIn={signIn} setSignIn={setSignIn}/>\r\n                : \r\n                <div >\r\n                    <h1 className=\"header-title\">Sign up</h1>\r\n                    <Credentials notEntered={notEntered} setnotEntered={setnotEntered}/>\r\n                    <div className=\"login-paragraph\">\r\n                        Already have an account? <span className=\"highlight\" onClick={onClick}>Sign in</span>\r\n                        <br></br>\r\n                        <span className=\"or\">or</span>\r\n                        <br></br>\r\n                        Sign in with a <span className=\"highlight\">sample account</span> to see Covid Bubble in action\r\n                    </div>\r\n                </div>)\r\n                :\r\n                <div >\r\n                    <AddFriend onAdd={addFriend} setSignIn={setSignIn}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginHeader\r\n","import { Redirect } from \"react-router-dom\"\r\nimport LoginHeader from \"./LoginHeader\"\r\n\r\nconst LoginHeaderWrapper = ({signIn, setSignIn}) => {\r\n     if (signIn){\r\n        return <Redirect to=\"/mainpage\" />;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"section-box\">\r\n                <LoginHeader signIn={signIn} setSignIn={setSignIn}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginHeaderWrapper\r\n","export default __webpack_public_path__ + \"static/media/pythonLogo.82efb64f.png\";","export default __webpack_public_path__ + \"static/media/reactLogo.8a6fc0a2.png\";","export default __webpack_public_path__ + \"static/media/mongodbLogo.bf804240.png\";","export default __webpack_public_path__ + \"static/media/flaskLogo.611b5611.svg\";","import { Redirect, useNavigate, useHistory } from \"react-router-dom\"\r\nimport pythonLogo from \"../images/pythonLogo.png\"\r\nimport reactLogo from \"../images/reactLogo.png\"\r\nimport mongodbLogo from \"../images/mongodbLogo.png\"\r\nimport flaskLogo from \"../images/flaskLogo.svg\"\r\n\r\nconst LandingPage = () => {\r\n  const history = useHistory();\r\n  const handleClick = () => {\r\n    history.push(\"/\");\r\n  }\r\n    \r\n  return (\r\n    <div className=\"landing-page-container\">\r\n        <div className=\"landing-header\">\r\n          Visualize you and your friends' social circles with <span className=\"highlight\">Covid Bubble</span>!\r\n        </div>\r\n        <div className=\"landing-section-header\">\r\n          About Project\r\n        </div>\r\n        <div className=\"landing-paragraph\">\r\n        This project was developed during the covid-19 pandemic where during certain periods of time, people were only allowed to meet a certain number of people. \r\n        </div>\r\n        <div className=\"landing-section-header\">\r\n          Tools Used\r\n        </div>\r\n        <div className=\"tools-used\">\r\n          <img src={reactLogo} className=\"tool-image\"></img>\r\n          <img src={pythonLogo} className=\"tool-image\"></img>\r\n          <img src={flaskLogo} className=\"tool-image\"></img>\r\n          <img src={mongodbLogo} className=\"tool-image\"></img>\r\n        </div>\r\n        <div className=\"landing-buttons-container\">\r\n          <button type=\"button\" className=\"main-button\" onClick={handleClick}>\r\n            Sign in to Covid Bubble\r\n          </button>\r\n          <a className=\"secondary-button\" href=\"https://github.com/HeidiHan0000/covid-bubble/\">\r\n            View Code on Github\r\n          </a>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","import { useState, useEffect } from \"react\"\r\nimport { ForceGraph2D } from 'react-force-graph'\r\nimport { Link} from \"react-router-dom\"\r\nimport { Context } from \"./Store/appContext\"\r\nimport { useContext } from \"react\"\r\nimport { Redirect, useHistory } from \"react-router\"\r\n\r\nconst MainPage = ({setSignIn, signIn}) => {\r\n    const {store, actions} = useContext(Context)\r\n    const [nodes_, setNodes] = useState([])\r\n    const [links_,setLinks] = useState([])\r\n    const [name, setName] = useState([])\r\n    const [recieved, setRecieved] = useState(false)\r\n    const [logout, setLogout] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const logoutHandle = () => {\r\n        actions.logout();\r\n        setSignIn(false);\r\n        <Redirect to=\"/\" />\r\n    }\r\n    const handleClick = () => {\r\n        // setSignIn(true);\r\n        console.log(\"token\", store.token);\r\n        history.push(\"/editFriends\")\r\n        // <Redirect to=\"/\" />\r\n      }\r\n\r\n    useEffect(() => {\r\n        if (signIn){\r\n            actions.getGraph(setNodes, setName ,setLinks).then(()=>{\r\n                setRecieved(true)\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {!store.token ? <Redirect to= \"/\" /> :\r\n              (recieved ? \r\n                <div className=\"mainPageContainer\">\r\n                        {/* <h1 style={{textAlign: \"center\"}}>{name}'s Social Bubble</h1> */}\r\n                    <ForceGraph2D\r\n                        graphData={{nodes: nodes_, links: links_}} \r\n                        nodeId = \"id\" \r\n                        nodeColor= {node => \r\n                        node.group === 1 ? \r\n                            '#E6550D' \r\n                        : \r\n                            (node.group === 2 ? \r\n                                    '#FD8D3C' \r\n                                :\r\n                                    '#36A7F9')}\r\n                        nodeVal={node => Math.pow(node.group === 1 ? 1.25 : 1.15,3)}\r\n                    />\r\n                    <div className=\"mainpage-button-container\">\r\n                    <button className='main-button' onClick={handleClick}> Edit Friends List</button>\r\n                    <button className='main-button' onClick={logoutHandle}> Sign Out </button>\r\n\r\n                        </div>\r\n                        \r\n\r\n                        \r\n                </div>\r\n                : \r\n                <div>\r\n                    <h1 style={{textAlign: \"center\"}}>Loading...</h1>\r\n                </div>)\r\n            \r\n            }\r\n            \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import './App.css';\r\nimport { useState } from \"react\"\r\nimport LoginHeaderWrapper from './Component/LoginHeaderWrapper';\r\nimport LandingPage  from './Component/LandingPage';\r\nimport MainPage from './Component/MainPage';\r\nimport AddFriend from './Component/AddFriend';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport injectContext from './Component/Store/appContext';\r\n\r\nfunction App() {\r\n  const [signIn, setSignIn] = useState(false)\r\n  const addFriend = (friend) =>{\r\n    console.log(friend)\r\n  }\r\n  return (\r\n      <Router>\r\n        <div className = \"container\">\r\n          <Link to=\"/landing\" className='logo'>\r\n            Covid Bubble\r\n          </Link>\r\n          <div className = \"content-wrapper\">\r\n            <Switch>\r\n\r\n            <Route exact path=\"/landing\" component={() => (<LandingPage/>)}/>\r\n            <Route exact path=\"/\" component={() => (<LoginHeaderWrapper signIn={signIn} setSignIn={setSignIn} />)}/>\r\n            <Route exact path=\"/mainpage\" component={() => (<MainPage setSignIn={setSignIn} signIn= {signIn} />)}/>\r\n            <Route exact path=\"/editFriends\" component={() => (<AddFriend onAdd={addFriend} setSignIn={setSignIn}/>)}/>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default injectContext(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nReactDOM.render(\r\n  // // <React.StrictMode>\r\n  // //   <App />\r\n  // // </React.StrictMode>,\r\n  // <BrowserRouter>\r\n  //   <App />\r\n  // </BrowserRouter>,\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}